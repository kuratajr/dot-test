(()=>{"use strict";const sendMessage=message=>{if("undefined"!=typeof browser)return browser.runtime.sendMessage(message);else return new Promise((resolve=>{chrome.runtime.sendMessage(message,resolve)}))},domLoaded=(async()=>{if("loading"===document.readyState)await new Promise((resolve=>{window.addEventListener("DOMContentLoaded",resolve)}))})(),informationPromise=sendMessage({type:"promo page: get information",url:location.href});(async()=>{const[{daysAfterInstall,internalExperiments,promotion}]=await Promise.all([informationPromise,domLoaded]),expvarid=(internalExperiments=>Object.entries(internalExperiments).map((([id,variant])=>`${id}_${String(variant)}`)))(internalExperiments),links=document.querySelectorAll('a[href*="/orders/new"]');for(const link of links){const url=link.href,urlObject=new URL(url);if(urlObject.searchParams.set("instd",String(daysAfterInstall)),expvarid.length)urlObject.searchParams.set("expvarid",expvarid.join(","));link.href=urlObject.toString(),link.addEventListener("click",(()=>{sendMessage({type:"promo page: click",promotion})}))}})()})();